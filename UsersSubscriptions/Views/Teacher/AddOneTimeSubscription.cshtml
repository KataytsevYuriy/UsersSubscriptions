@model AddSubscriptionViewModel
@{
    Layout = "_Layout";
    Course selectedCourse = Model.TeacherCourses.Where(cour => cour.AllowOneTimePrice == true).FirstOrDefault();
    if (Model.SelectedCours != null) { selectedCourse = Model.TeacherCourses.Where(cour => cour.Id == Model.SelectedCours.Id).FirstOrDefault(); }
    DateTime date = DateTime.Now;
    if (Model.Month != null) { date = Model.Month; }
    DateTime minDate = DateTime.Now;
}

<div>
    <form asp-action="AddOneTimeSubscription" method="post">
        <input type="hidden" asp-for="SchoolId" />
        <input type="hidden" asp-for="Student.Id" id="studentId" />

        <div class="form-group">
            <label asp-for="Student.FullName">Ім'я</label>
            <input asp-for="Student.FullName" class="form-control" />
        </div>
        <div class="form-group">
            <label asp-for="Student.PhoneNumber">Телефон</label>
            <input class="form-control phone-input" name="Student.PhoneNumber"
                   type="tel" required placeholder="+38(___)___-__-__"
                   value="@Model.Student?.PhoneNumber?" />

        </div>
        <div class="form-group">
            <button class="btn btn-outline-info" type="button" data-toggle="modal" data-target="#addPhoneModal">Вибрати учня</button>
            <label class="ml-2" id="userName">@(string.IsNullOrEmpty(Model.Student?.Id) ? "" : Model.Student?.FullName)</label>
            <button type="button" id="btnDismissSelectUser" class="btn-outline-danger d-none">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
        <div class="form-group">
            <label asp-for="Month">Дата</label>
            <input class="form-control" type="date" name="Month" value="@date.ToString("yyyy-MM-dd")" min="@minDate.ToString("yyyy-MM-dd")" />
        </div>
        <div class="form-group">
            <label>Курс</label>
            <select class="form-control" id="CourseSelect" name="SelectedCours.Id" onchange="ChangeCourse(this)">
                @foreach (var cours in Model.TeacherCourses)
                {
                    @if (cours.AllowOneTimePrice == true)
                    {
                        <option selected="@(selectedCourse==cours?true:false)" value="@cours.Id"
                                data-price="@cours.OneTimePrice"
                                data-pt="@JsonConvert.SerializeObject(cours.CoursePaymentTypes
                                        .OrderBy(cpt=>cpt.PaymentType.Priority)
                                        .Select(cPT => new PaymentTypeView {
                                            Id =cPT.PaymentType.Id,
                                            Name=cPT.PaymentType.Name,
                                            }).ToList())">
                            @cours.Name
                        </option>
                    }
                }
            </select>
        </div>

        <div class="form-group">
            <label asp-for="@selectedCourse.OneTimePrice">Ціна: </label>
            <input id="Price" asp-for="@selectedCourse.OneTimePrice" class="form-control"
                   name="SelectedCours.Price" value="@selectedCourse.OneTimePrice" />
        </div>
        <div class="form-group">
            <label asp-for="@selectedCourse.CoursePaymentTypes">Варіант сплати</label>
            <select class="form-control" name="SelectedPaymentType" id="selectPaymentType">
                @foreach (PaymentType type in selectedCourse.CoursePaymentTypes
                 .OrderBy(cpt => cpt.PaymentType.Priority)
                 .Select(cpt => cpt.PaymentType))
                {
                    <option value="@type.Id">@type.Name</option>
                }
            </select>
        </div>
        <div class="text-center">
            @if (selectedCourse.CoursePaymentTypes?.Count() > 0)
            {
                <button type="submit" id="btnSubmit" class="btn btn-primary">Додати </button>
            }
            else
            {
                <button type="submit" disabled id="btnSubmit" class="btn btn-primary">Додати </button>
            }
        </div>
    </form>
</div>


<partial name="_AddUserModal" />
@section Scripts{
    <script src="~/js/jquery.mask.min.js"></script>
    <script src="~/js/addUserModal.js"></script>
    <script>
        function updateUser(userIdent) {
            $("#studentId").val(userIdent.Id);
            $("#userName").text(userIdent.Name);
            $("#btnDismissSelectUser").removeClass("d-none");
        };
    </script>
    <script>
        function ChangeCourse(a) {
            var val = a.options[a.selectedIndex].dataset.price;
            $("#Price").val(val);
            var hasPTypes = false;
            var pts = JSON.parse(a.options[a.selectedIndex].dataset.pt);
            $("#selectPaymentType").empty();
            $.each(pts, function (index, value) {
                $("#selectPaymentType").append(new Option(value.Name, value.Id));
                hasPTypes = true;
            });
            if (hasPTypes == true) {

            }
            $("#btnSubmit").prop('disabled', !hasPTypes);
        }
    </script>
    <script>
        $(function () {
            $("#btnDismissSelectUser").click(function () {
                $("#studentId").val("");
                $("#userName").text("");
                $("#btnDismissSelectUser").addClass("d-none");
            });
        });
    </script>
}